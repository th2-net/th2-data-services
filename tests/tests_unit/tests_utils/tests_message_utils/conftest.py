import pytest


@pytest.fixture
def messages_frequencies_test_data():
    messages = [
        {"timestamp": {"epochSecond": 1682308224 - 4 * 60 * 60}, "messageType": "ERROR"},  # 2023-04-23 23:50:24
        {"timestamp": {"epochSecond": 1682308827 - 4 * 60 * 60}, "messageType": "ERROR"},  # 2023-04-24 00:00:27
        {"timestamp": {"epochSecond": 1682308828 - 4 * 60 * 60}, "messageType": "ERROR"},  # 2023-04-24 00:00:28
        {"timestamp": {"epochSecond": 1682308829 - 4 * 60 * 60}, "messageType": "ERROR"},  # 2023-04-24 00:00:29
        {"timestamp": {"epochSecond": 1682316031 - 4 * 60 * 60}, "messageType": "ERROR"},  # 2023-04-24 02:00:31
        {"timestamp": {"epochSecond": 1682323233 + 4 * 60 * 60}, "messageType": "ERROR"},  # 2023-04-24 12:00:33
        {"timestamp": {"epochSecond": 1682679854 + 4 * 60 * 60}, "messageType": "ERROR"},  # 2023-04-28 15:04:14
    ]
    return messages


@pytest.fixture
def messages_frequencies_expected_values_5s():
    expected_values = {
        "GAP_1_ANCHOR_FALSE": [
            ("2023-04-23T23:50:24", "2023-04-23T23:50:29", 1),
            ("2023-04-24T00:00:27", "2023-04-24T00:00:32", 3),
            ("2023-04-24T02:00:31", "2023-04-24T02:00:36", 1),
            ("2023-04-24T12:00:33", "2023-04-24T12:00:38", 1),
            ("2023-04-28T15:04:14", "2023-04-28T15:04:19", 1),
        ],
        "GAP_2_ANCHOR_FALSE": [
            ("2023-04-23T23:50:24", "2023-04-23T23:50:29", 1),
            ("2023-04-24T00:00:24", "2023-04-24T00:00:29", 2),
            ("2023-04-24T00:00:29", "2023-04-24T00:00:34", 1),
            ("2023-04-24T02:00:29", "2023-04-24T02:00:34", 1),
            ("2023-04-24T12:00:29", "2023-04-24T12:00:34", 1),
            ("2023-04-28T15:04:14", "2023-04-28T15:04:19", 1),
        ],
        "GAP_3_ANCHOR_FALSE_LEN": 80087,
        "GAP_2_ANCHOR_TRUE": [
            ("2023-04-23T23:50:20", "2023-04-23T23:50:25", 1),
            ("2023-04-24T00:00:25", "2023-04-24T00:00:30", 3),
            ("2023-04-24T02:00:30", "2023-04-24T02:00:35", 1),
            ("2023-04-24T12:00:30", "2023-04-24T12:00:35", 1),
            ("2023-04-28T15:04:10", "2023-04-28T15:04:15", 1),
        ],
        "GAP_3_ANCHOR_TRUE_LEN": 80087,
    }
    return expected_values


@pytest.fixture
def messages_frequencies_expected_values_1h():
    expected_values = {
        "GAP_1_ANCHOR_FALSE": [
            ("2023-04-23T23:00", "2023-04-24T00:00", 1),
            ("2023-04-24T00:00", "2023-04-24T01:00", 3),
            ("2023-04-24T02:00", "2023-04-24T03:00", 1),
            ("2023-04-24T12:00", "2023-04-24T13:00", 1),
            ("2023-04-28T15:00", "2023-04-28T16:00", 1),
        ],
        "GAP_2_ANCHOR_FALSE": [
            ("2023-04-23T23:00", "2023-04-24T00:00", 1),
            ("2023-04-24T00:00", "2023-04-24T01:00", 3),
            ("2023-04-24T02:00", "2023-04-24T03:00", 1),
            ("2023-04-24T12:00", "2023-04-24T13:00", 1),
            ("2023-04-28T15:00", "2023-04-28T16:00", 1),
        ],
        "GAP_3_ANCHOR_FALSE_LEN": 113,
        "GAP_2_ANCHOR_TRUE": [
            ("2023-04-23T23:00", "2023-04-24T00:00", 1),
            ("2023-04-24T00:00", "2023-04-24T01:00", 3),
            ("2023-04-24T02:00", "2023-04-24T03:00", 1),
            ("2023-04-24T12:00", "2023-04-24T13:00", 1),
            ("2023-04-28T15:00", "2023-04-28T16:00", 1),
        ],
        "GAP_3_ANCHOR_TRUE_LEN": 113,
    }
    return expected_values


@pytest.fixture
def messages_frequencies_expected_values_2h():
    expected_values = {
        "GAP_1_ANCHOR_FALSE": [
            ("2023-04-23T23:00", "2023-04-24T01:00", 4),
            ("2023-04-24T02:00", "2023-04-24T04:00", 1),
            ("2023-04-24T12:00", "2023-04-24T14:00", 1),
            ("2023-04-28T15:00", "2023-04-28T17:00", 1),
        ],
        "GAP_2_ANCHOR_FALSE": [
            ("2023-04-23T23:00", "2023-04-24T01:00", 4),
            ("2023-04-24T01:00", "2023-04-24T03:00", 1),
            ("2023-04-24T11:00", "2023-04-24T13:00", 1),
            ("2023-04-28T15:00", "2023-04-28T17:00", 1),
        ],
        "GAP_3_ANCHOR_FALSE_LEN": 57,
        "GAP_2_ANCHOR_TRUE": [
            ("2023-04-23T22:00", "2023-04-24T00:00", 1),
            ("2023-04-24T00:00", "2023-04-24T02:00", 3),
            ("2023-04-24T02:00", "2023-04-24T04:00", 1),
            ("2023-04-24T12:00", "2023-04-24T14:00", 1),
            ("2023-04-28T14:00", "2023-04-28T16:00", 1),
        ],
        "GAP_3_ANCHOR_TRUE_LEN": 57,
    }
    return expected_values


@pytest.fixture
def messages_frequencies_expected_values_2d():
    expected_values = {
        "GAP_1_ANCHOR_FALSE": [
            ("2023-04-23", "2023-04-25", 6),
            ("2023-04-28", "2023-04-30", 1),
        ],
        "GAP_2_ANCHOR_FALSE": [
            ("2023-04-23", "2023-04-25", 6),
            ("2023-04-27", "2023-04-29", 1),
        ],
        "GAP_3_ANCHOR_FALSE_LEN": 3,
        "GAP_2_ANCHOR_TRUE": [
            ("2023-04-23", "2023-04-25", 6),
            ("2023-04-27", "2023-04-29", 1),
        ],
        "GAP_3_ANCHOR_TRUE_LEN": 3,
    }
    return expected_values
